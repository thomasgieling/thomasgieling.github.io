button, input, select, textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}


/*
Forms

Forms are used to gather information from the customer

Styleguide 2
*/

/*
Buttons

The standard button uses $button_text_color_main and $button_bg_color_main as text color and background color. The background is auomatically darkend by 10% on hover.
The border of the button is initially the same color as the background, but get's darkened by 12% on hover.

default			- Standard button state
.focus			- Focus button state
.disabled		- Focus button state

Markup:
<button class="button {$modifiers}"><span>Button Tag</span></button>
<input type="button" name="button" value="Input Button" class="button {$modifiers}"/>
<a class="button {$modifiers}">Link button</a>

Styleguide 2.1

*/

.button {
	font-family:$default-font;
	@include standard-button($button_text_color_main, $button_bg_color_main)
}

/*
Standard Icon buttons

A standard button with an icon aligned to the left. As you can see, <strong>input</strong> tags do not allow icons to be added.

default			- Standard button state
.focus			- Focus button state
.disabled		- Focus button state

Markup:
<button class="icon-button {$modifiers}"><span>Button Tag</span></button>
<input type="button" name="button" value="Input Button" class="icon-button {$modifiers}"/>
<a class="icon-button {$modifiers}">Link button</a>

Styleguide 2.2

*/

.icon-button {
	font-family:$default-font;
	@include standard-icon-button($button_text_color_main, $button_bg_color_main, $button-icon)
}

/*
Add to cart button

Titles and headlines are used to emphasize content in the page. They should be used as headlines meaning that they should be used to denote the main element of a segment in the page.
Titles and headlines can be applied using the classes that represent them or using the h1 through h6 tags

default			- Standard button state
.focus			- Focus button state
.disabled		- Focus button state

Markup:
<button class="add-to-cart-button {$modifiers}"><span>Button Tag</span></button>
<input type="button" name="button" value="Input Button" class="add-to-cart-button {$modifiers}"/>
<a class="add-to-cart-button {$modifiers}">Link button</a>

Styleguide 2.3

*/

.add-to-cart-button {
	font-family:$default-font;
	@include add-to-cart-button($button_text_color_main, $button-cart-icon, $button_bg_color_main_from, $button_bg_color_main_to)
}





/*
Text input

Text inputs are there in multiple types: text, email, number, search.
We do not use any other text input types. All input types also look exactly the same, all they do is trigger a different keyboard on a mobile device.


default			- Standard input look and feel
.focus			- input element when focused
.disabled		- Disabled form inputs
.invalid		- Error inputs
.valid 			- Valid input

Markup:
<form novalidate>
	<div class="form-cell">
		<input type="text" name="sample field" value="" placeholder="Placeholder" class="text-input {$modifiers}">
		<span class="error-text">Error message for field</span>
	</div>
</form>

Styleguide 2.4

*/
.text-input {
	@include text-input(200px);
}
::placeholder { 
    color:    $input_placeholder_color;
    text-transform: uppercase;
}
.form-table {
	display:table;
	width:100%;
}
.form-row {
	display:table-row;
}
.form-cell {
	position:relative;
	display:table-cell;
	margin-bottom:20px;
}

/*
Select inputs

Text inputs are there in multiple types: text, email, number, search.
We do not use any other text input types. All input types also look exactly the same, all they do is trigger a different keyboard on a mobile device.

Markup:
<div class="form-table">
	<div class="form-row">
		<div class="form-cell" style="height: 400px; padding-right:20px;">
			<select class="selectpicker show-tick form-control">
				<option value="0">select</option>
				<option value="1">option 1</option>
				<option value="2">option 2</option>
				<option value="3">option 3</option>
			</select>
		</div>
		<div class="form-cell" style="height: 400px; padding-right:20px;">
			<select class="selectpicker show-tick form-control">
				<optgroup label="Group 1">
					<option value="0">select</option>
					<option value="1">option 1</option>
				</optgroup>
				<optgroup label="Group 2">
					<option value="2">option 2</option>
					<option value="3">option 3</option>
				</optgroup>
			</select>
		</div>
		<div class="form-cell" style="height: 400px; padding-right:20px;">
			<select class="selectpicker show-tick form-control select-size" title="select size">
				<option value="36">36</option>
				<option value="36 2/3">36 2/3</option>
				<option value="37 1/3">37 1/3</option>
				<option value="38 2/3">38 2/3</option>
				<option value="39 1/3">39 1/3</option>
				<option value="40">40</option>
				<option value="41 1/3">41 1/3</option>
				<option value="42">42</option>
				<option value="42 2/3">42 2/3</option>
				<option value="43 1/3">43 1/3</option>
				<option value="44">44</option>
				<option value="44 2/3">44 2/3</option>
				<option value="48">48</option>
				<optgroup label="Backorderable products">
					<option value="38" data-content="<span data-toggle='tooltip' data-placement='top' data-original-title='Backorder: Ships on 24-09-2015'>38</span>">38</option>
					<option value="40 2/3" data-content="<span data-toggle='tooltip' data-placement='left' data-original-title='Backorder: Ships on 24-09-2015'>40 2/3</span>">40 2/3</option>
					<option value="45 1/3" data-content="<span data-toggle='tooltip' data-placement='right' data-original-title='Backorder: Ships on 24-09-2015'>45 1/3</span>">45 1/3</option>
					<option value="46" data-content="<span data-toggle='tooltip' data-placement='bottom' data-original-title='Backorder: Ships on 24-09-2015'>46</span>">46</option>
				</optgroup>
			</select>
		</div>
	</div>
</div>

Styleguide 2.5

*/

select.bs-select-hidden,
select.selectpicker {
  display: none;
}

.bootstrap-select {
	position:relative;
	font-family: $default-font;
	font-size: $select-font-size;
}
.mobile-device {
    display: block !important;
    position: absolute;
    opacity: 0;
    z-index: $zindex-select;
    top: 0;
  	height: $select-height;
  	width: 100%;
  	-webkit-appearance: menulist-button;
}

.bootstrap-select button{
	padding: $select-padding;
	border: $select-border;
	border-radius: $select-border-radius;
	line-height: $select-line-height;
	background-color:$select-background-color;
	color:$select-color;
	position:relative;
	min-width:100%;
	width:100%;
}
.bootstrap-select.open button {
	border-bottom:0px;
	z-index: $zindex-select;
}
.bootstrap-select button .caret {
	border:none;
}
.bootstrap-select button .caret:after {
	color: $select-caret-color;
	content: $select-cart-icon;
	position: absolute;
	top: $select-caret-top;
	right: $select-caret-right;
	font-family: $icomoon;
	speak: none;
	-webkit-font-smoothing: antialiased;
}
.bootstrap-select.open button .caret:after {
	transform:rotate(180deg);
}

//Copied from bootstrap _drowdown:
// The dropdown wrapper (div)
.dropup,
.dropdown {
  position: relative;
}

// Prevent the focus on the dropdown toggle when closing dropdowns
.dropdown-toggle:focus {
  outline: 0;
}

.bootstrap-select .dropdown-menu {
	position: relative;
    top: 100%;
    left: 0;
    z-index: 1000;
    display: none;
    float: none;
    min-width: 160px;
    padding: 0;
    margin: 0;
    list-style: none;
    font-size: 1em;
    text-align: left;
    background-color: #fff;
    border: none;
}

// The dropdown menu (ul)
.bootstrap-select .dropdown-menu.open {
  position: absolute;
  left: 0;
  z-index: 1000;
  display: none; // none by default, but block on "open" of the menu
  list-style: none;
  text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
  background-color: $select_dropdown_background;
  border-top: $select_option_border;
  min-width: 100%;
  width:100%;
}
.bootstrap-select .dropdown-menu.inner {
	list-style:none;
	padding:0px;
	margin:0;
	& li a{
		cursor: pointer;
		padding: $select-option-padding;
		background-color: $select_dropdown_background;
		border: $input_border;
		border-top: none;
		display:block;
		outline:0;
		color:$select-option-color;

		&:hover,&:focus {
			border-bottom:solid 2px $select_dropdown_selected;
		  	color: $select_dropdown_selected;
		  	outline:0;
		  	padding:$select-option-hover-padding;
		}
	}

	& li.dropdown-header {
		padding: $select-option-padding;
		background-color: #fff;
		border: $select-option-border;
		border-top: none;
		font-style: italic;
		font-family: $select-option-header-font;
	}
}
.bootstrap-select.open {
  // Show the menu
  > .dropdown-menu {
    display: block;
  }

  // Remove the outline when :focus is triggered
  > a {
    outline: 0;
  }
}

.select-size {
	width:237px;

	&.open .dropdown-toggle {
		border-bottom: solid 1px #FFF;
	}
	& .dropdown-menu.open {
		border: $input_border;
		width: 311px;
		top: $select-height;
		overflow:visible !important;
	}
	& .dropdown-menu.inner {
		padding: $select-size-inner-padding;
	}
	& .dropdown-menu.inner li {
		display:inline;
		float:left;
		margin: $select-size-option-margin;
		min-width: $select-size-option-min-width;
		text-align: center;
		& a {
			padding:0px;
			border-top: $input_border;
			border-radius: $select-border-radius;

			&:hover, &:focus {
				border:solid 1px $select_dropdown_selected;
		  		border-bottom:$select-option-hover-border;
		  		color: $select_dropdown_selected;
		  		outline:0;

		  		& span:first-child {
		  			padding:$select-size-option-hvr-padding;
		  		}
			}
			& span:first-child {
		  		padding: $select-size-option-padding;
		  		display: block;
		  	}

		}
		&.dropdown-header {
			display: block;
			width: 100%;
			border: none;
			margin: $select-size-option-hdr-margin;
			padding:0px;
		}
	}
}
